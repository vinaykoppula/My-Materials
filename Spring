Debugging
=>10 % of coding 90% debugging
=>debugging standalone app,web app,remote app
=>JSP,Html  we don’t debug but we use developer debugging at browser
=>long init=System.currentTime();
{

}
Long end=System.currnetTime();
Sysout(end-init);
=>soft deleting and hard deleting ,deleting only in my app not in db called soft deleting ,deleting completely from db also called hard deleting,for softdeleting we need streams filters Y concept

=>Server will not available in my machine ,it is available in other machine,I have to connect to the server code(UAT) and debug my code so we go for remote debigging(Remote Java App),but it isn’t so easy,we need access to server and it will degrade the server performance(me and other may work on that),before that do we have that facility in our project or not[Practically code in my machine server is in other laptop],we need logger concept

=>we may enter into jdk code by pressing F5 to get out from jdk code press F7,attach jdk code ,for spring framework no need to attach automatically comes
=>when we debug web app,app keep on refreshing means it is debugging
=>using debugging we get complete code information
 
=>@Controller+@ResponseBody=@RestCOntroller from spring 4 

Employee e=new Employee();
=>@RequestMapping(value=”/{name}”,method=RequestMethod.GET,produces=”application/json”)
public  @ReponseBody Employee getEmployeeInJson(@PathVarible  String name){
e.setEname(“Geroge”);
e.setEaddr(“NewJersy”);

}
===========================================================================
=>Version controlling
=>stroe the code in one central system(Centralized codebase) and monitor the changes—svn
=>other made some changes in the code the my functionalities are not working then I have to know who made changes with deep collaboration
=>who what when changes 
=>code integration(storage capacity)+tracking code changes(monitoring access)----svn
=>Repository server
=>VCS=version controlling system
=>SCM=software configuration system
=>SVN(Sub Version -opensource),GitHub,BitBucket
=>Use Svn Client to connect Svn Server with URL,Un,Pwd
=>we are using eclipse to connect automatically svn server
=>we need to install only client software in our machine
=>Svn client---tortoies svn,sub version plugin
=>https://user-PC/svn/IRCTC_REPO/
=>To place any files(txt) to store in svn server use Tortoise svn or just to place code use subclipse plugin
=>=========================================================================
=>Spring runners
=>we have 2 types of args
1)command line arguments
2)system arguments
=>command line arguments:these are applicable only for one application
System args:these are applicable for multiple applications,at jvm level,for all apps
=>we can pass these args in 2 ways 
1)option args    k=v,---name=jhon
2)non option args   v,jhon
=>first these args goes to spring starter app,then we have multiple runner according to those these args are passed for multiple runners
=>main method is entry point for app
=>we have only one starter ,conatains main method,we have multiple runners they have only run()
=>we can pass system args by –Did=123
=>CommandLineRunner vs ApplicationRunner    run method in ApplicationRunner take ApplicationArguments args as parameter,while in CommandLineRunner run() takes String…args parameter,so we can some fetaures ApplicationArguments args like we can get args name,values,length()
=>==========================================================
SVN

=>Add-when new file has to be check in to repo,means that file will not be there in repo
=>mail from TL
Hi Vinat,welcome to my team…!
Take this URL Repo,checkout code from repo and setup your workspace
If you any questions please reach me….!
=>we only perform check out only once ,from there onwards we perform update only
=>Repo(Code base),Local machine code(Working copy),repo code(Working base)
=>Only one dev will develop the project first ,then we checkout first
=>show log:check in s history ,who has done the changes
=>dlete:we can delete file from repo
=>Add:first file commiting to repo,so we make it eligible for repo
=>conflicts means changing the file same time,so we have to lock that file so nobody can work on that except me,after commiting the changes we will unlock,if we commit automatically lock will opened
=>revision id means id for check in,will incremented 1 automatically.
=>looking for better code optimized code taking less time and memory
=>we can revert back to previous revision with revision id
=>for every change in repo ,one revision number will be created…
=>when ever we are commiting code aompare that with repo code then commit
=>show diff===if code changes in repo then update ,then commit
=>Update(every day) , check out (only once)
=>Conflicts problems smith has 10 lines of code and john has done code changes from 11 lines ,then john can update without compare working copy with working base,if john made changes in 5 line then he has to compare,but what if 5 th line was blank john was changing in repo…
===============================================================
=>JVM has 2 memories Meta memory and heap memory,meta meory used to load .class files,heap memory used to hold obj
=>OutOfMemoryError in jvm means we load unnecessary files into meta memory ,we can handle exceptions but not error
=>In spring we configure beans,viewresolver,context loader listener,parent container,child container,dispahcer servlet ,not even server not req in boot.
=>boot we can integrate all modules and work with them easily…
=>no need to take care about configurations
=>Spring boot parent starter,spring-boot-starter-parent,take care of all the dependency versions,2.2.2 boot will load all necessary child dependencies with the repect to the version 2.2,mysql connector jar,Jackson,jsob b,jax b,joint, will extending the properties form boot starter parent,boot will download which version jar file download them only
=>version collision problem will be resolved by parent starter
=>we can place proeprties file in 4 diff locations,
file:./config/application.properies
files:./application.properties
classpath:/config/application.properties   mostly used
classpth:/application.properties
=>we get @value(“${eid}”) if it is not there in peiprties file we will get NullPointerException and IllgealArgumentExceptio…
=>but in @ConfigurationProperies will not get that will get null
=>=======================================================
Actuators
=>App in prod has to be monitored
=>App up and run,monitor the memory details,heap dumps,thread dump,dump(download details for analy),how many threads are linked,
=>Actuators will downloaded those details
=>predefined actuators,custom actuaotr


=>profiels =env specifc configuartons maintannece
=>spring conainers,tomcat container,jvm….?
=>db,webservices,log, for every env,deployment process is easy

=>emdedded servers=>tomcat,spring-boot-starter-web,jetty,undertow

=>normal spring app diff to migrate to spring boot
=>spring will from scarthc brand new project
=>Boot app can create in 3 ways1)spring intitalizer2)from sts stater wizard3)cli software
=>



















